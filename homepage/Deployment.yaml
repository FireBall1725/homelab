apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
secrets:
  - name: homepage

---

apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
data:
  kubernetes.yaml: |
    mode: cluster

  settings.yaml: |
    title: FireBall - FireKatt3 Homepage
    color: slate
    theme: dark
    headerStyle: boxed
    # background: https://wallpapersmug.com/u/12c15c/cityscape-cycle-ride-lets-go-home-art.jpeg
    # cardBlur: sm # sm, "", md, etc... see https://tailwindcss.com/docs/backdrop-blur
    base: https://homepage.k3s.firekatt.ca/
    target: _self
    layout:
      Storage:
        style: row
        columns: 4
      Media:
        style: row
        columns: 4
      Home Automation:
        style: row
        columns: 4
      Home Lab:
        style: row
        columns: 4
      Monitoring:
        style: row
        columns: 4

  custom.css: ""

  custom.js: ""

  bookmarks.yaml: |
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/

  services.yaml: |
    - Storage:
        - Longhorn:
            href: https://longhorn.k3s.firekatt.ca
            icon: "longhorn.png"
        - Media Synology:
            href: http://10.0.1.241:5000/
            icon: "synology.png"
        - Backup Synology:
            href: http://10.0.1.242:5000/
            icon: "synology.png"

    - Media:
        - Plex:
            href: https://plex.k3s.firekatt.ca
            icon: "plex.png"
            siteMonitor: https://plex.k3s.firekatt.ca
            widget:
              type: plex
              url: https://plex.k3s.firekatt.ca
              key: {{HOMEPAGE_VAR_API_PLEX}}
        - Sonarr:
            href: https://sonarr.k3s.firekatt.ca
            icon: "sonarr.png"
        - Radarr:
            href: https://radarr.k3s.firekatt.ca
            icon: "radarr.png"
        - SABnzbd:
            href: https://sabnzbd.k3s.firekatt.ca
            icon: "sabnzbd.png"
        - Overseerr:
            href: https://overseerr.k3s.firekatt.ca
            icon: "overseerr.png"
        - Mylar:
            href: https://mylar.k3s.firekatt.ca
            icon: "mylar.png"
        - Bazarr:
            href: https://bazarr.k3s.firekatt.ca
            icon: "bazarr.png"
            siteMonitor: https://bazarr.k3s.firekatt.ca
            widget:
              type: bazarr
              url: https://bazarr.k3s.firekatt.ca
              key: {{HOMEPAGE_VAR_API_BAZARR}}
        - Prowlarr:
            href: https://prowlarr.k3s.firekatt.ca
            icon: "prowlarr.png"
        - Readarr:
            href: https://readarr.k3s.firekatt.ca
            icon: "readarr.png"
        - Tautulli:
            href: https://tautulli.k3s.firekatt.ca/
            icon: "tautulli.png"

    - Home Automation:
        - Home Assistant:
            href: https://ha.k3s.firekatt.ca
            icon: "home-assistant.png"
        - ESPHome:
            href: https://esphome.k3s.firekatt.ca
            icon: "esphome.png"
        - Node Red:
            href: https://nodered.k3s.firekatt.ca
            icon: "node-red.png"
        - ZWaveJS2MQTT:
            href: https://zwave.k3s.firekatt.ca/
            icon: "zwavejs2mqtt.png"
        - Zigbee2MQTT:
            href: https://zigbee.k3s.firekatt.ca/
            icon: "zigbee2mqtt.png"
        - ESPHome (Old):
            href: https://esphome.erins.net/
            icon: "esphome.png"

    - Home Lab:
        - Traefik:
            href: https://traefik.k3s.firekatt.ca/
            icon: "traefik.png"
            widget:
              type: traefik
              url: https://traefik.k3s.firekatt.ca/
        - Unifi:
            href: https://unifi.ui.com/
            icon: "unifi.png"
        - Unifi (Local):
            href: http://10.0.1.254/
            icon: "unifi.png"
        - Argo CD:
            href: https://argocd.k3s.firekatt.ca/
            icon: "argocd.png"

    - Monitoring:
        - Grafana:
            href: https://grafana.k3s.firekatt.ca/
            icon: "grafana.png"
        - Prometheus:
            href: https://prometheus.k3s.firekatt.ca/
            icon: "prometheus.png"
        - Alert Manager:
            href: https://alertmanager.k3s.firekatt.ca/
            icon: "alertmanager.png"

  widgets.yaml: |
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
    - search:
        provider: duckduckgo
        target: _self
  docker.yaml: ""

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage

---

apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:latest"
          resources:
            limits:
              memory: 1024Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "1"
          env:
            - name: HOMEPAGE_VAR_API_PLEX
              valueFrom:
                secretKeyRef:
                  name: media
                  key: apikey_plex
            - name: HOMEPAGE_VAR_API_BAZARR
              valueFrom:
                secretKeyRef:
                  name: media
                  key: apikey_bazarr
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config/custom.js
              name: homepage-config
              subPath: custom.js
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: homepage
  labels:
    app.kubernetes.io/name: homepage
  # annotations:
  #   gethomepage.dev/description: Dynamically Detected Homepage
  #   gethomepage.dev/enabled: "true"
  #   gethomepage.dev/group: Cluster Management
  #   gethomepage.dev/icon: homepage.png
  #   gethomepage.dev/name: Homepage
spec:
  rules:
    - host: "homepage.k3s.firekatt.ca"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: homepage
                port:
                  number: 3000
